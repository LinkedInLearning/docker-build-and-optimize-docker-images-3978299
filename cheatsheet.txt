***************************************************
*** 01_03 Finding Official Images on Docker Hub ***
***************************************************

https://hub.docker.com

docker search node

docker pull node

************************************
*** 01_04 Building Custom Images ***
************************************

docker build -t docker-image-demo .

docker run -p 3000:3000 docker-image-demo

****************************************************
*** 01-05 Challenge: Finding and Building Images ***
****************************************************

- Find the latest tagged version of the official node alpine image
- Copy the image name and version for the latest version
- Update the Dockerfile with the new image version
- Run the Docker build command and tag the image node-app
- Extra Credit: Run the web app using the docker run command 
  with the port mapping on port 3000 in the container and port 3000 on the host

***************************************************
*** 01-06 Solution: Finding and Building Images ***
***************************************************

https://hub.docker.com

https://hub.docker.com/search?q=node&badges=official

https://hub.docker.com/_/node/tags?name=alpine

docker build -t node-app .

docker run -p 3000:3000 node-app

***********************************
*** 02-02 Tagging Docker Images ***
***********************************

docker build -t docker-image-demo:1.0 .

docker build -t docker-image-demo .   # same as docker-image-demo:latest

docker tag docker-image-demo docker-image-demo:2.0

docker tag docker-image-demo:2.0  docker-image-demo:2.3.1

docker tag docker-image-demo:2.0 docker-image-demo:main

docker tag docker-image-demo:2.0 docker-image-demo:prod

docker tag docker-image-demo:2.0 docker-image-demo:commit-abc123

https://docs.docker.com/build/ci/github-actions/

docker tag docker-image-demo:2.0 docker-image-demo:2025-08-01-abc123

docker tag docker-image-demo:2.0 docker-image-demo:2.3.1 

docker tag docker-image-demo:2.0 docker-image-demo:prod 

docker tag docker-image-demo:2.0 docker-image-demo:2025-04-08-abc123

docker tag docker-image-demo:2.0 docker-image-demo:2.0.1-beta

************************************
*** 02-03 Labeling Docker Images ***
************************************

docker build -t docker-image-demo:2.3.1 .

docker build -t docker-image-demo:2.3.1 --label “com.example.project.environment=staging" --label “org.opencontainers.image.authors=Shelley Benhoff” .

docker compose build

******************************************
*** 02-04 Working with Tags and Labels ***
******************************************

docker images

docker inspect docker-image-demo:2.3.1 --format='{{json .Config.Labels}}'

docker images --filter "label=org.opencontainers.image.version=2.3.1"

**********************************************
*** 02-05 Working with an Image Repository ***
**********************************************

docker tag docker-image-demo:2.3.1 [username]/docker-image-demo:2.3.1

docker login

docker push [username]/docker-image-demo:2.3.1

docker pull [username]/docker-image-demo:2.3.1

***********************************************************
*** 02-06 Challenge: Tagging and Labeling Docker Images ***
***********************************************************

- Tag your local [username]/docker-image-demo:2.3.1 image with version 2.3.2
  Update compose.yml with the new image version
- Add 2 labels to the [username]/docker-image-demo:2.3.2 image:
  org.opencontainers.image.version=2.3.2
  com.example.project.environment=development
- Build the image
- Inspect the image and verify the labels

**********************************************************
*** 02-07 Solution: Tagging and Labeling Docker Images ***
**********************************************************

docker build -t [username]/docker-image-demo:2.3.2 .

docker tag [username]/docker-image-demo:2.3.1 [username]/docker-image-demo:2.3.2

docker build -t [username]/docker-image-demo:2.3.2 --label “org.opencontainers.image.version=2.3.2” --label “com.example.project.environment=development" .

docker compose build

docker build -t [username]/docker-image-demo:2.3.2 .

docker inspect [username]/docker-image-demo:2.3.2 --format='{{json .Config.Labels}}'

**************************************
*** 03-03 Excluding Unneeded Files ***
**************************************

docker build -t sbenhoff/docker-image-demo:2.3.2 .

docker run -p 3000:3000 sbenhoff/docker-image-demo:2.3.2

***************************************************
*** 03-04 Building Images using Caching Options ***
***************************************************

docker build --no-cache -t [username]/docker-image-demo:2.3.2 .

docker build --pull -t [username]/docker-image-demo:2.3.2 .

docker build --cache-from [username]/docker-image-demo:2.3.1 -t [username]/docker-image-demo:2.3.2 .

*****************************************************
*** 03-05 Challenge: Working with the Build Cache ***
*****************************************************

- Build the image for our project from scratch and tag it [username]/docker-image-demo:2.3.3
- Build the image [username]/docker-image-demo:2.3.3 and pull in the latest changes from the base image
- Build the image [username]/docker-image-demo:2.3.3 by sharing the build cache from the previous version 2.3.2
- Extra Credit: Update the version labels that exist in the Dockerfile and compose.yml files
  Update the image version in the compose file
  Build the image [username]/docker-image-demo:2.3.3 again to incorporate these changes
  
****************************************************
*** 03-06 Solution: Working with the Build Cache ***
****************************************************

docker build --no-cache -t [username]/docker-image-demo:2.3.3 .

docker build --pull -t [username]/docker-image-demo:2.3.3 .

docker build --cache-from [username]/docker-image-demo:2.3.2 -t [username]/docker-image-demo:2.3.3 .

docker build -t [username]/docker-image-demo:2.3.3 .

***********************************
*** 04-01 Choosing a Base Image ***
***********************************

https://hub.docker.com/_/node/tags

https://hub.docker.com/_/node/tags?name=current-alpine

https://hub.docker.com/_/node

****************************************************
*** 04-02 Incorporating Basic Security Practices ***
****************************************************

docker build -t sbenhoff/docker-image-demo:2.3.3 .

docker run -p 3000:3000 sbenhoff/docker-image-demo:2.3.3